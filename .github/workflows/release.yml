name: release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
jobs:
  build_release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'true'
      - name: Get extension version
        run: |
          VERSION=$(node -p "require('./src/manifest.json').version")
          echo "EXT_VERSION=v$VERSION" >> $GITHUB_ENV
      - name: Check version matches tag
        if: ${{ github.ref_name != env.EXT_VERSION }}
        run: |
          echo "Error: tag: '${{ github.ref_name }}' does not match version: '${{ env.EXT_VERSION }}'"
          exit 1
      - name: setup node
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
      - name: install deps
        run: yarn install --frozen-lockfile
      - name: build
        run: yarn build
        env:
          WEB_EXT_FILENAME: jira-bugzilla-v${{ env.EXT_VERSION }}.xpi
      - name: release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{github.token}}
        with:
          draft: false
          prerelease: false
          release_name: v${{ env.EXT_VERSION }}
          tag_name: v${{ env.EXT_VERSION }}
      - name: "web-ext sign"
        id: web-ext-sign
        uses: ./.github/actions/action-web-ext
        with:
          cmd: sign
          source: ./web-ext-artifacts/jira-bugzilla-v${{ env.EXT_VERSION }}.xpi
          channel: unlisted
          apiKey: ${{ secrets.AMO_JWT_ISSUER }}
          apiSecret: ${{ secrets.AMO_JWT_SECRET }}
          timeout: 900000
      - name: upload extension file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{github.token}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ${{steps.web-ext-sign.outputs.target}}
          asset_name: jira-bugzilla-v${{ env.EXT_VERSION }}.xpi
          asset_content_type: application/x-xpinstall
